{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/word-box.component.ts","webpack:///src/app/components/word-box.component.html","webpack:///src/app/material.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","snackBar","clipboard","words","size","column","columns","rows","printMod","formTitle","formNotes","formWord","formDescription","formBatch","refresh","event","previousIndex","currentIndex","word","filter","w","value","trim","toUpperCase","description","some","shift","length","push","alert","setValue","field","wrong","lines","split","map","line","params","p","isNaN","parseInt","wordKeys","unique","i","indexOf","out","forEach","copy","message","label","open","duration","Array","Math","floor","selector","templateUrl","styleUrls","AppModule","declarations","imports","entryComponents","providers","bootstrap","removeWord","WordBoxComponent","refreshLetters","changes","letters","MaterialModule","environment","production","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACCE;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAA8C;;;;;;;;AACnG;;AAAqB;AAAA;;AAAA;;AAAA;AAAA;;AAAgC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AACrD;;AAAqB;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAErB;;AACE;;AACE;;AAAW;;AAAK;;AAChB;;AACF;;AACA;;AACE;;AAAW;;AAAK;;AAChB;;AACF;;AACF;;;;;;AANoB;;AAAA;;AAIG;;AAAA;;;;;;;;AAIvB;;AACE;;AACE;;AAAW;;AAAI;;AACf;;AACF;;AACA;;AACE;;AAAW;;AAAW;;AACtB;;AACF;;AACA;;AAA6D;AAAA;;AAAA;;AAAA;AAAA;;AAAoB;;AAAG;;AACtF;;;;;;AAPoB;;AAAA;;AAIA;;AAAA;;;;;;;;AAalB;;AAA6D;AAAA;;AAAA;;AAAA;AAAA;;AAAsC;;AAAU;;;;;;;;AAR/G;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AAEF;;AACA;;AACA;;AAA6D;AAAA;;AAAA;;AAAA;AAAA;;AAAqB;;AAAS;;AAC3F;;AACF;;;;;;AANuB;;AAAA;;AAK6D;;AAAA;;;;;;AAO9E;;AAAoC;;AAAM;;;;;;AAC1C;;AAAyC;;AAAU;;;;;;AAAV;;AAAA;;;;;;;;AAIvC;;AAA4C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAqB;;AAAS;;;;;;AAAT;;AAAA;;;;;;AADnE;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;;;AAEP;;AAAyC;AAAA;;AAAA;;AAAA;AAAA;;AACmB;;;;;;;;AADW,+FAAqB,MAArB,EAAqB,QAArB,EAAqB,MAArB,EAAqB,YAArB,EAAqB,QAArB,EAAqB,cAArB;;;;;;;;AAT3E;;AACE;;AACE;;AACA;;AACF;;AACA;;AAA8B;AAAA;;AAAA;;AAAA;AAAA;;AAC5B;;AAGA;;AAEF;;AACF;;;;;;AAZuB;;AAED;;AAAA;;AACb;;AAAA;;AAGY;;AAAA;;AAGH;;AAAA;;;;;;AAMhB;;AACE;;AACE;;AAAkB;;AAAY;;AAC9B;;AAAqB;;AAAsB;;AAC7C;;AACF;;;;;;;AAHsB;;AAAA;;AACG;;AAAA;;;;;;AAJ3B;;AACE;;AAMF;;;;;;AANqC;;AAAA;;;;QD5C5BC,Y;;;AAkBX,4BAAoBC,QAApB,EAAmDC,SAAnD,EAAyE;AAAA;;AAArD,aAAAD,QAAA,GAAAA,QAAA;AAA+B,aAAAC,SAAA,GAAAA,SAAA;AAhBnD,aAAAC,KAAA,GAAgB,EAAhB;AACA,aAAAC,IAAA,GAAO,CAAP;AACA,aAAAC,MAAA,GAAS,CAAT;AACA,aAAAC,OAAA,GAAU,EAAV;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAC,QAAA,GAAW,KAAX;AAEA,aAAAC,SAAA,GAAY,IAAI,0DAAJ,CAAgB,UAAhB,CAAZ;AACA,aAAAC,SAAA,GAAY,IAAI,0DAAJ,CAAgB,gIAC1B,sIAD0B,GAE1B,+EAFU,CAAZ;AAIA,aAAAC,QAAA,GAAW,IAAI,0DAAJ,EAAX;AACA,aAAAC,eAAA,GAAkB,IAAI,0DAAJ,EAAlB;AACA,aAAAC,SAAA,GAAY,IAAI,0DAAJ,EAAZ;AAGE,aAAKC,OAAL;AACD;;;;6BAEIC,K,EAA8B;AACjC,yFAAgB,KAAKZ,KAArB,EAA4BY,KAAK,CAACC,aAAlC,EAAiDD,KAAK,CAACE,YAAvD;AACD;;;+BAEMC,I,EAAc;AACnB,eAAKf,KAAL,GAAa,KAAKA,KAAL,CAAWgB,MAAX,CAAkB,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACF,IAAF,KAAWA,IAAf;AAAA,WAAnB,CAAb;AACA,eAAKJ,OAAL;AACD;;;kCAES;AACR,cAAMI,IAAI,GAAG,CAAC,CAAC,KAAKP,QAAL,CAAcU,KAAhB,GAAwB,KAAKV,QAAL,CAAcU,KAAd,CAAoBC,IAApB,GAA2BC,WAA3B,EAAxB,GAAmE,EAAhF;AACA,cAAMC,WAAW,GAAG,CAAC,CAAC,KAAKZ,eAAL,CAAqBS,KAAvB,GAA+B,KAAKT,eAAL,CAAqBS,KAArB,CAA2BC,IAA3B,EAA/B,GAAmE,EAAvF;;AACA,cAAI,CAAC,CAACJ,IAAF,IAAU,CAAC,CAACM,WAAhB,EAA6B;AAC3B,gBAAI,CAAC,KAAKrB,KAAL,CAAWsB,IAAX,CAAgB,UAAAL,CAAC;AAAA,qBAAIA,CAAC,CAACF,IAAF,KAAWA,IAAf;AAAA,aAAjB,CAAL,EAA4C;AAC1C,kBAAMQ,KAAK,GAAG,KAAKrB,MAAL,GAAca,IAAI,CAACS,MAAnB,GAA4B,KAAKtB,MAAL,GAAca,IAAI,CAACS,MAAnB,GAA4B,CAAxD,GAA4D,CAA1E;AACA,mBAAKxB,KAAL,CAAWyB,IAAX,CAAgB;AAACV,oBAAI,EAAJA,IAAD;AAAOM,2BAAW,EAAXA,WAAP;AAAoBE,qBAAK,EAALA;AAApB,eAAhB;AACA,mBAAKG,KAAL,CAAW,qBAAX,EAAkC,SAAlC;AACA,mBAAKlB,QAAL,CAAcmB,QAAd,CAAuB,EAAvB;AACA,mBAAKlB,eAAL,CAAqBkB,QAArB,CAA8B,EAA9B;AACA,mBAAKhB,OAAL;AACD,aAPD,MAOO;AACL,mBAAKe,KAAL,CAAW,kBAAX;AACD;AACF,WAXD,MAWO;AACL,iBAAKA,KAAL,CAAW,iCAAX;AACD;AACF;;;mCAEU;AAAA;;AACT,cAAME,KAAK,GAAG,CAAC,CAAC,KAAKlB,SAAL,CAAeQ,KAAjB,GAAyB,KAAKR,SAAL,CAAeQ,KAAf,CAAqBC,IAArB,EAAzB,GAAuD,EAArE;;AACA,cAAI,CAAC,CAACS,KAAN,EAAa;AAAA;;AACX,gBAAIC,KAAK,GAAG,EAAZ;AACA,gBAAMC,KAAK,GAAGF,KAAK,CAACG,KAAN,CAAY,IAAZ,CAAd;AACA,gBAAM/B,KAAK,GAAW8B,KAAK,CAACE,GAAN,CAAU,UAAAC,IAAI,EAAI;AACtC,kBAAMC,MAAM,GAAGD,IAAI,CAACF,KAAL,CAAW,GAAX,CAAf;;AACA,kBAAIG,MAAM,CAACV,MAAP,KAAkB,CAAtB,EAAyB;AACvBK,qBAAK,GAAG,uEAAR;AACA;AACD,eAHD,MAGO,IAAIK,MAAM,CAACZ,IAAP,CAAY,UAAAa,CAAC;AAAA,uBAAI,CAACA,CAAC,CAAChB,IAAF,GAASK,MAAd;AAAA,eAAb,CAAJ,EAAwC;AAC7CK,qBAAK,GAAG,yDAAR;AACA;AACD,eAHM,MAGA,IAAIO,KAAK,CAACF,MAAM,CAAC,CAAD,CAAP,CAAT,EAAsB;AAC3BL,qBAAK,GAAG,4CAAR;AACA;AACD;;AACD,kBAAMd,IAAI,GAAGmB,MAAM,CAAC,CAAD,CAAN,CAAUf,IAAV,GAAiBC,WAAjB,EAAb;;AACA,kBAAI,KAAI,CAACpB,KAAL,CAAWsB,IAAX,CAAgB,UAAAL,CAAC;AAAA,uBAAIA,CAAC,CAACF,IAAF,KAAWA,IAAf;AAAA,eAAjB,CAAJ,EAA2C;AACzCc,qBAAK,GAAG,4BAAR;AACA;AACD;;AACD,qBAAO;AAACd,oBAAI,EAAJA,IAAD;AAAOQ,qBAAK,EAAEc,QAAQ,CAACH,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAtB;AAAuCb,2BAAW,EAAEa,MAAM,CAAC,CAAD,CAAN,CAAUf,IAAV;AAApD,eAAP;AACD,aAlBqB,CAAtB;;AAmBA,gBAAIU,KAAJ,EAAW;AACT,mBAAKH,KAAL,CAAWG,KAAX;AACA;AACD;;AACD,gBAAIS,QAAQ,GAAGtC,KAAK,CAACgC,GAAN,CAAU,UAAAf,CAAC;AAAA,qBAAIA,CAAC,CAACF,IAAN;AAAA,aAAX,CAAf;AACA,gBAAIwB,MAAM,GAAGvC,KAAK,CAACgB,MAAN,CAAa,UAACC,CAAD,EAAIuB,CAAJ;AAAA,qBAAUF,QAAQ,CAACG,OAAT,CAAiBxB,CAAC,CAACF,IAAnB,MAA6ByB,CAAvC;AAAA,aAAb,CAAb;;AACA,gCAAKxC,KAAL,EAAWyB,IAAX,uCAAmBc,MAAnB;;AACA,iBAAK7B,SAAL,CAAeiB,QAAf,CAAwB,EAAxB;AACA,iBAAKhB,OAAL;AACD,WA/BD,MA+BO;AACL,iBAAKe,KAAL,CAAW,oBAAX;AACD;AACF;;;mCAEU;AACT,cAAIgB,GAAG,GAAG,EAAV;AACA,eAAK1C,KAAL,CAAW2C,OAAX,CAAmB,UAAA1B,CAAC;AAAA,mBAAIyB,GAAG,IAAIzB,CAAC,CAACF,IAAF,GAAS,GAAT,GAAeE,CAAC,CAACM,KAAjB,GAAyB,GAAzB,GAA+BN,CAAC,CAACI,WAAjC,GAA+C,IAA1D;AAAA,WAApB;AACA,eAAKtB,SAAL,CAAe6C,IAAf,CAAoBF,GAApB;AACA,eAAKhB,KAAL,CAAW,2CAAX,EAAwD,aAAxD;AACD;;;8BAEamB,O,EAAmC;AAAA,cAAlBC,KAAkB,uEAAV,QAAU;AAC/C,eAAKhD,QAAL,CAAciD,IAAd,CAAmBF,OAAnB,EAA4BC,KAA5B,EAAmC;AAACE,oBAAQ,EAAE;AAAX,WAAnC;AACD;;;kCAEiB;AAAA;;AAChB,eAAK/C,IAAL,GAAY,CAAZ;AACA,eAAKD,KAAL,CAAW2C,OAAX,CAAmB,UAAA1B,CAAC;AAAA,mBAAIA,CAAC,CAACF,IAAF,CAAOS,MAAP,GAAgB,MAAI,CAACvB,IAArB,GAA4B,MAAI,CAACA,IAAL,GAAYgB,CAAC,CAACF,IAAF,CAAOS,MAA/C,GAAwD,EAA5D;AAAA,WAApB;AACA,eAAKrB,OAAL,sBAAmB8C,KAAK,CAAC,KAAKhD,IAAN,CAAL,CAAiBR,IAAjB,EAAnB;;AACA,cAAI,KAAKS,MAAL,GAAc,KAAKD,IAAL,GAAY,CAA9B,EAAiC;AAC/B,iBAAKC,MAAL,GAAc,KAAKD,IAAL,GAAY,CAA1B;AACD;;AACD,cAAI,KAAKC,MAAL,KAAgB,CAApB,EAAuB;AACrB,iBAAKA,MAAL,GAAcgD,IAAI,CAACC,KAAL,CAAW,KAAKlD,IAAL,GAAY,CAAvB,CAAd;AACD;;AACD,eAAKG,IAAL,sBAAgB6C,KAAK,CAAC,KAAKjD,KAAL,CAAWwB,MAAZ,CAAL,CAAyB/B,IAAzB,EAAhB;AACD;;;;;;;uBA9GUI,Y,EAAY,wI,EAAA,iI;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,a;AAAA,ouC;AAAA;AAAA;ACZzB;;AACE;;AACA;;AACA;;AAEA;;AAWA;;AAYA;;AAWA;;AAEE;;AAcA;;AAQF;;AACF;;;;AA/DM;;AAAA;;AACA;;AAAA;;AACD;;AAAA;;AAEyB;;AAAA;;AAWA;;AAAA;;AAYA;;AAAA;;AAasB;;AAAA;;AAc7B;;AAAA;;;;;;;;;sED3CVA,Y,EAAY;cALxB,uDAKwB;eALd;AACTuD,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,oBAFJ;AAGTC,mBAAS,EAAE,CAAC,oBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;;;AEZzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAuBaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAPJ,CACP,uEADO,EAEP,4FAFO,EAGP,+DAHO,EAIP,kEAJO,CAOI;;;;0HAGFA,S,EAAS;AAAA,uBAZlB,2DAYkB,EAZJ,+EAYI;AAZY,kBAG9B,uEAH8B,EAI9B,4FAJ8B,EAK9B,+DAL8B,EAM9B,kEAN8B;AAYZ,O;AANC,K;;;;;sEAMVA,S,EAAS;cAdrB,sDAcqB;eAdZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EACE,+EADF,CADN;AAIRC,iBAAO,EAAE,CACP,uEADO,EAEP,4FAFO,EAGP,+DAHO,EAIP,kEAJO,CAJD;AAURC,yBAAe,EAAE,EAVT;AAWRC,mBAAS,EAAE,EAXH;AAYRC,mBAAS,EAAE,CAAC,2DAAD;AAZH,S;AAcY,Q;;;;;;;;;;;;;;;;;;ACvBtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEI;;AAEE;;AACF;;;;;;;;;AAFK,wGAA+B,OAA/B,EAA+B,WAA/B;;AACH;;AAAA;;;;;;;;AAJN;;AACE;;AACE;;AAIA;;AAAK;AAAA;;AAAA;;AAAA;AAAA;;AACH;;AAAU;;AAAmB;;AAC/B;;AACA;;AAAK;AAAA;;AAAA;;AAAA;AAAA;;AACH;;AAAU;;AAAoB;;AAChC;;AACA;;AACA;;AAAK;AAAA;;AAAA;;AAAA,iBAAS,QAAAC,UAAA,wBAAT;AAAmC,SAAnC;;AACH;;AAAU;;AAAM;;AAClB;;AACF;;AACF;;;;;;AAfS;;AAAA;;;;;;AAmBL;;AAC6D;;AAAM;;;;;;;;;AAA9D,wGAA+B,OAA/B,EAA+B,WAA/B;;;;;;AAHT;;AACE;;AACE;;AAEF;;AACF;;;;;;AAHS;;AAAA;;;;QDbIC,gB;;;AALb;AAAA;;AASW,aAAAzD,QAAA,GAAW,KAAX;AACC,aAAAwD,UAAA,GAAa,IAAI,0DAAJ,EAAb;AA0CX;;;;mCAvCS;AACN,eAAKE,cAAL;AACD;;;oCAEWC,O,EAAsB;AAChC,cAAI,CAAC,CAAC,KAAKC,OAAP,IAAkB,KAAKA,OAAL,CAAazC,MAAb,KAAwB,KAAKvB,IAAnD,EAAyD;AACvD,iBAAK8D,cAAL;AACD;;AACD,cAAI,KAAKhD,IAAL,CAAUQ,KAAV,GAAkB,KAAKR,IAAL,CAAUA,IAAV,CAAeS,MAAjC,GAA0C,KAAKvB,IAAnD,EAAyD;AACvD,iBAAKc,IAAL,CAAUQ,KAAV,IAAmB,KAAKR,IAAL,CAAUQ,KAAV,GAAkB,KAAKR,IAAL,CAAUA,IAAV,CAAeS,MAAjC,GAA0C,KAAKvB,IAAlE;AACA,iBAAK8D,cAAL;AACD;AACF;;;oCAEW;AACV,cAAI,KAAKhD,IAAL,CAAUQ,KAAV,KAAoB,CAAxB,EAA2B;AACzB,iBAAKR,IAAL,CAAUQ,KAAV;AACA,iBAAKwC,cAAL;AACD;AACF;;;qCAEY;AACX,cAAI,KAAKhD,IAAL,CAAUQ,KAAV,GAAkB,KAAKR,IAAL,CAAUA,IAAV,CAAeS,MAAjC,GAA0C,KAAKvB,IAAnD,EAAyD;AACvD,iBAAKc,IAAL,CAAUQ,KAAV;AACA,iBAAKwC,cAAL;AACD;AACF;;;yCAEwB;AACvB,cAAME,OAAO,GAAG,EAAhB;;AACA,eAAK,IAAIzB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKzB,IAAL,CAAUQ,KAA9B,EAAqCiB,CAAC,EAAtC,EAA0C;AACxCyB,mBAAO,CAACxC,IAAR,CAAa,EAAb;AACD;;AACDwC,iBAAO,CAACxC,IAAR,OAAAwC,OAAO,qBAAS,KAAKlD,IAAL,CAAUA,IAAV,CAAegB,KAAf,CAAqB,EAArB,CAAT,EAAP;;AACA,eAAK,IAAIS,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAI,KAAKvC,IAAL,GAAY,KAAKc,IAAL,CAAUA,IAAV,CAAeS,MAA5B,GAAsC,KAAKT,IAAL,CAAUQ,KAApE,EAA2EiB,EAAC,EAA5E,EAAgF;AAC9EyB,mBAAO,CAACxC,IAAR,CAAa,EAAb;AACD;;AACD,eAAKwC,OAAL,GAAeA,OAAf;AACD;;;;;;;uBA9CUH,gB;AAAgB,K;;;YAAhBA,gB;AAAgB,mC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,oF;AAAA,c;AAAA,a;AAAA,2M;AAAA;AAAA;ACR7B;;AAmBA;;;;AAnBc;;AAmBA;;AAAA;;;;;;;;;sEDXDA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTV,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;gBAC1B;;;gBACA;;;gBACA;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;AEbaY,c;;;;;YAAAA;;;;yBAAAA,c;AAAc,O;AAAA,gBA7CvB,4DA6CuB,EA5CvB,sEA4CuB,EA3CvB,qEA2CuB,EA1CvB,iEA0CuB,EAzCvB,+DAyCuB,EAxCvB,qEAwCuB,EAvCvB,oFAuCuB,EAtCvB,uEAsCuB,EArCvB,oFAqCuB,EApCvB,yEAoCuB,EAnCvB,sFAmCuB,EAlCvB,qEAkCuB,EAjCvB,6EAiCuB,EAhCvB,uEAgCuB,EA/BvB,2EA+BuB,EA9BvB,iFA8BuB,EA7BvB,yEA6BuB,EA5BvB,2EA4BuB,EA3BvB,+EA2BuB,EA1BvB,8EA0BuB,EAzBvB,qEAyBuB,EAxBvB,uEAwBuB,EAvBvB,qEAuBuB,EAtBvB,qEAsBuB,EArBvB,2EAqBuB,EApBvB,+EAoBuB,EAnBvB,oFAmBuB,EAlBvB,4FAkBuB,EAjBvB,uEAiBuB,EAhBvB,uEAgBuB,EAfvB,yEAeuB,EAdvB,2EAcuB,EAbvB,yEAauB,EAZvB,oFAYuB,EAXvB,8EAWuB,EAVvB,qEAUuB,EATvB,uEASuB,EARvB,qEAQuB,EAPvB,2EAOuB,EANvB,2EAMuB,EALvB,qEAKuB,EAJvB,gEAIuB,EAHvB,sEAGuB;;;;0HAAdA,c,EAAc;AAAA,kBA7CvB,4DA6CuB,EA5CvB,sEA4CuB,EA3CvB,qEA2CuB,EA1CvB,iEA0CuB,EAzCvB,+DAyCuB,EAxCvB,qEAwCuB,EAvCvB,oFAuCuB,EAtCvB,uEAsCuB,EArCvB,oFAqCuB,EApCvB,yEAoCuB,EAnCvB,sFAmCuB,EAlCvB,qEAkCuB,EAjCvB,6EAiCuB,EAhCvB,uEAgCuB,EA/BvB,2EA+BuB,EA9BvB,iFA8BuB,EA7BvB,yEA6BuB,EA5BvB,2EA4BuB,EA3BvB,+EA2BuB,EA1BvB,8EA0BuB,EAzBvB,qEAyBuB,EAxBvB,uEAwBuB,EAvBvB,qEAuBuB,EAtBvB,qEAsBuB,EArBvB,2EAqBuB,EApBvB,+EAoBuB,EAnBvB,oFAmBuB,EAlBvB,4FAkBuB,EAjBvB,uEAiBuB,EAhBvB,uEAgBuB,EAfvB,yEAeuB,EAdvB,2EAcuB,EAbvB,yEAauB,EAZvB,oFAYuB,EAXvB,8EAWuB,EAVvB,qEAUuB,EATvB,uEASuB,EARvB,qEAQuB,EAPvB,2EAOuB,EANvB,2EAMuB,EALvB,qEAKuB,EAJvB,gEAIuB,EAHvB,sEAGuB;AAAA,O;AAHR,K;;;;;sEAGNA,c,EAAc;cA/C1B,sDA+C0B;eA/CjB;AACRvE,iBAAO,EAAE,CACP,4DADO,EAEP,sEAFO,EAGP,qEAHO,EAIP,iEAJO,EAKP,+DALO,EAMP,qEANO,EAOP,oFAPO,EAQP,uEARO,EASP,oFATO,EAUP,yEAVO,EAWP,sFAXO,EAYP,qEAZO,EAaP,6EAbO,EAcP,uEAdO,EAeP,2EAfO,EAgBP,iFAhBO,EAiBP,yEAjBO,EAkBP,2EAlBO,EAmBP,+EAnBO,EAoBP,8EApBO,EAqBP,qEArBO,EAsBP,uEAtBO,EAuBP,qEAvBO,EAwBP,qEAxBO,EAyBP,2EAzBO,EA0BP,+EA1BO,EA2BP,oFA3BO,EA4BP,4FA5BO,EA6BP,uEA7BO,EA8BP,uEA9BO,EA+BP,yEA/BO,EAgCP,2EAhCO,EAiCP,yEAjCO,EAkCP,oFAlCO,EAmCP,8EAnCO,EAoCP,qEApCO,EAqCP,uEArCO,EAsCP,qEAtCO,EAuCP,2EAvCO,EAwCP,2EAxCO,EAyCP,qEAzCO,EA0CP,gEA1CO,EA2CP,sEA3CO;AADD,S;AA+CiB,Q;;;;;;;;;;;;;;;;;;AC3F3B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMwE,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component} from '@angular/core';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\nimport {Word} from './models/word.model';\nimport {FormControl} from '@angular/forms';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {Clipboard} from '@angular/cdk/clipboard';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss']\n})\nexport class AppComponent {\n\n  words: Word[] = [];\n  size = 0;\n  column = 0;\n  columns = [];\n  rows = [];\n  printMod = false;\n\n  formTitle = new FormControl('Rejtvény');\n  formNotes = new FormControl('Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.' +\n    'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in' +\n    'reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.');\n\n  formWord = new FormControl();\n  formDescription = new FormControl();\n  formBatch = new FormControl();\n\n  constructor(private snackBar: MatSnackBar, private clipboard: Clipboard) {\n    this.refresh();\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.words, event.previousIndex, event.currentIndex);\n  }\n\n  remove(word: string) {\n    this.words = this.words.filter(w => w.word !== word);\n    this.refresh();\n  }\n\n  addWord() {\n    const word = !!this.formWord.value ? this.formWord.value.trim().toUpperCase() : '';\n    const description = !!this.formDescription.value ? this.formDescription.value.trim() : '';\n    if (!!word && !!description) {\n      if (!this.words.some(w => w.word === word)) {\n        const shift = this.column > word.length ? this.column - word.length + 1 : 0;\n        this.words.push({word, description, shift});\n        this.alert('Word has been added', 'Success');\n        this.formWord.setValue('');\n        this.formDescription.setValue('');\n        this.refresh();\n      } else {\n        this.alert('Duplicated word!');\n      }\n    } else {\n      this.alert('All of the fields are required!');\n    }\n  }\n\n  addBatch() {\n    const field = !!this.formBatch.value ? this.formBatch.value.trim() : '';\n    if (!!field) {\n      let wrong = '';\n      const lines = field.split('\\n');\n      const words: Word[] = lines.map(line => {\n        const params = line.split('|');\n        if (params.length !== 3) {\n          wrong = 'Missing or too many \\'|\\' character. It should be exactly 3 per line.';\n          return;\n        } else if (params.some(p => !p.trim().length)) {\n          wrong = 'One of the parts (word, shift, description) is missing.';\n          return;\n        } else if (isNaN(params[1])) {\n          wrong = 'Shift value should be number, e.g. 1 or 0.';\n          return;\n        }\n        const word = params[0].trim().toUpperCase();\n        if (this.words.some(w => w.word === word)) {\n          wrong = 'The word should be unique!';\n          return;\n        }\n        return {word, shift: parseInt(params[1], 10), description: params[2].trim()}\n      });\n      if (wrong) {\n        this.alert(wrong);\n        return;\n      }\n      let wordKeys = words.map(w => w.word);\n      let unique = words.filter((w, i) => wordKeys.indexOf(w.word) === i);\n      this.words.push(...unique);\n      this.formBatch.setValue('');\n      this.refresh();\n    } else {\n      this.alert('Field is required!');\n    }\n  }\n\n  getBatch() {\n    let out = '';\n    this.words.forEach(w => out += w.word + '|' + w.shift + '|' + w.description + '\\n');\n    this.clipboard.copy(out);\n    this.alert('Content has been copied to the clipboard.', 'Information');\n  }\n\n  private alert(message: string, label = 'Error!') {\n    this.snackBar.open(message, label, {duration: 3000});\n  }\n\n  private refresh() {\n    this.size = 0;\n    this.words.forEach(w => w.word.length > this.size ? this.size = w.word.length : {});\n    this.columns = [...Array(this.size).keys()];\n    if (this.column > this.size - 1) {\n      this.column = this.size - 1;\n    }\n    if (this.column === 0) {\n      this.column = Math.floor(this.size / 2);\n    }\n    this.rows = [...Array(this.words.length).keys()];\n  }\n}\n","<div id=\"main\">\r\n  <h1 *ngIf=\"!printMod\" (click)=\"printMod = !printMod\">Crossword Generator - Click here to print view</h1>\r\n  <h1 *ngIf=\"printMod\" (click)=\"printMod = !printMod\"> {{ formTitle.value }}</h1>\r\n  <p *ngIf=\"printMod\"> {{ formNotes.value }}</p>\r\n\r\n  <div class=\"form-container\" *ngIf=\"!printMod\">\r\n    <mat-form-field appearance=\"fill\" class=\"word-field\">\r\n      <mat-label>Title</mat-label>\r\n      <input matInput [formControl]=\"formTitle\">\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\" class=\"full-width\">\r\n      <mat-label>Notes</mat-label>\r\n      <textarea matInput [formControl]=\"formNotes\"></textarea>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div class=\"form-container\" *ngIf=\"!printMod\">\r\n    <mat-form-field appearance=\"fill\" class=\"word-field\">\r\n      <mat-label>Word</mat-label>\r\n      <input matInput [formControl]=\"formWord\">\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\" class=\"full-width\">\r\n      <mat-label>Description</mat-label>\r\n      <input matInput [formControl]=\"formDescription\">\r\n    </mat-form-field>\r\n    <button mat-raised-button color=\"primary\" class=\"add-button\" (click)=\"addWord()\">Add</button>\r\n  </div>\r\n\r\n  <div class=\"form-container\" *ngIf=\"!printMod\">\r\n    <mat-form-field appearance=\"fill\" class=\"full-width\">\r\n      <mat-label>Add Batch</mat-label>\r\n      <textarea matInput [formControl]=\"formBatch\"\r\n                placeholder=\"Format: word1|shift1|desription1 /n word2|shift2|description2 /n ....\"></textarea>\r\n    </mat-form-field>\r\n    <br>\r\n    <button mat-raised-button color=\"primary\" class=\"add-button\" (click)=\"addBatch()\">Add Batch</button>\r\n    <button mat-raised-button color=\"primary\" class=\"add-button\" (click)=\"getBatch()\" *ngIf=\"size > 0\">Copy State</button>\r\n  </div>\r\n\r\n  <div class=\"container-position\">\r\n\r\n    <div class=\"container\" [class.print]=\"printMod\" *ngIf=\"!!words.length\">\r\n      <div class=\"number-column\">\r\n        <div class=\"head\" *ngIf=\"!printMod\">&nbsp;</div>\r\n        <div *ngFor=\"let r of rows\" class=\"head\">{{r + 1}}.</div>\r\n      </div>\r\n      <div cdkDropList class=\"list\" (cdkDropListDropped)=\"drop($event)\">\r\n        <div class=\"box\" *ngIf=\"!printMod\">\r\n          <div *ngFor=\"let c of columns\" class=\"head\" (click)=\"column = c\">{{c + 1}}</div>\r\n        </div>\r\n        <app-word-box *ngFor=\"let word of words\" (removeWord)=\"remove($event)\" [printMod]=\"printMod\"\r\n                      [word]=\"word\" [size]=\"size\" [column]=\"column\"></app-word-box>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"guide\" *ngIf=\"!!words.length\">\r\n      <div class=\"description-container\" *ngFor=\"let word of words; let i = index\">\r\n        <div class=\"description\">\r\n          <div class=\"numb\">{{ i + 1 }}.</div>\r\n          <div class=\"details\">{{ word.description }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MaterialModule} from './material.module';\nimport {WordBoxComponent} from './components/word-box.component';\nimport {ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent, WordBoxComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    ReactiveFormsModule\n  ],\n  entryComponents: [],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\r\nimport {Word} from '../models/word.model';\r\n\r\n@Component({\r\n  selector: 'app-word-box',\r\n  templateUrl: 'word-box.component.html',\r\n  styleUrls: ['word-box.component.scss']\r\n})\r\nexport class WordBoxComponent implements OnInit, OnChanges {\r\n  @Input() word: Word;\r\n  @Input() size: number;\r\n  @Input() column: number;\r\n  @Input() printMod = false;\r\n  @Output() removeWord = new EventEmitter<string>();\r\n  letters: string[];\r\n\r\n  ngOnInit(): void {\r\n    this.refreshLetters();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (!!this.letters && this.letters.length !== this.size) {\r\n      this.refreshLetters();\r\n    }\r\n    if (this.word.shift + this.word.word.length > this.size) {\r\n      this.word.shift -= this.word.shift + this.word.word.length - this.size;\r\n      this.refreshLetters();\r\n    }\r\n  }\r\n\r\n  shiftLeft() {\r\n    if (this.word.shift !== 0) {\r\n      this.word.shift--;\r\n      this.refreshLetters();\r\n    }\r\n  }\r\n\r\n  shiftRight() {\r\n    if (this.word.shift + this.word.word.length < this.size) {\r\n      this.word.shift++;\r\n      this.refreshLetters();\r\n    }\r\n  }\r\n\r\n  private refreshLetters() {\r\n    const letters = [];\r\n    for (let i = 0; i < this.word.shift; i++) {\r\n      letters.push('');\r\n    }\r\n    letters.push(...this.word.word.split(''));\r\n    for (let i = 0; i < (this.size - this.word.word.length) - this.word.shift; i++) {\r\n      letters.push('');\r\n    }\r\n    this.letters = letters;\r\n  }\r\n}\r\n","<ng-container *ngIf=\"!printMod\">\r\n  <div class=\"box\" cdkDrag>\r\n    <div *ngFor=\"let letter of letters; let i = index\" class=\"letter\"\r\n         [class.selected]=\"column === i\" [class.empty]=\"!letter\">\r\n      {{letter ? letter : '&nbsp;'}}\r\n    </div>\r\n    <div (click)=\"shiftLeft()\" class=\"arrow-button\">\r\n      <mat-icon>keyboard_arrow_left</mat-icon>\r\n    </div>\r\n    <div (click)=\"shiftRight()\" class=\"arrow-button\">\r\n      <mat-icon>keyboard_arrow_right</mat-icon>\r\n    </div>\r\n    <div class=\"arrow-button\"></div>\r\n    <div (click)=\"removeWord.emit(word.word)\" class=\"arrow-button\">\r\n      <mat-icon>delete</mat-icon>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"printMod\">\r\n  <div class=\"box\">\r\n    <div *ngFor=\"let letter of letters; let i = index\" class=\"letter\"\r\n         [class.selected]=\"column === i\" [class.empty]=\"!letter\">&nbsp;</div>\r\n  </div>\r\n</ng-container>\r\n","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {ClipboardModule} from '@angular/cdk/clipboard';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class MaterialModule {\r\n}\r\n\r\n\r\n/**  Copyright 2019 Google LLC. All Rights Reserved.\r\n Use of this source code is governed by an MIT-style license that\r\n can be found in the LICENSE file at http://angular.io/license */\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}